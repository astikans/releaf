:ruby
  body_classes = []
  body_classes << "application-#{Rails.application.class.parent_name.downcase}"
  body_classes << "controller-#{params[:controller].tr( '_/', '-' )}"
  body_classes << "view-#{controller.active_view}"  if controller.respond_to? :active_view
  body_classes << "side-compact" if current_admin_user.try(:settings).try(:[], 'releaf.side.compact')

  _assets_path = __FILE__.split('/')[0...-1].join('/') + "/../../../assets"
  controller_asset = params[:controller]

!!! 5
%html
  %head
    %title= page_title
    %meta{content: "text/html; charset=utf-8", "http-equiv" => "Content-Type"}
    = stylesheet_link_tag "releaf/application", media: 'all'
    - if Releaf::AssetsResolver.stylesheet_exists? controller_asset
      = stylesheet_link_tag "releaf/controllers/#{controller_asset}", media: 'all'
    - %w[css.scss.erb scss.erb css.scss scss css.erb css sass.erb sass].each do |ext|
      - if File.exists?(Rails.root.to_s + "/app/assets/stylesheets/controllers/#{controller_asset}.#{ext}")
        = stylesheet_link_tag "controllers/#{controller_asset}", media: 'all'
      - if File.exists?(Rails.root.to_s + "/app/assets/stylesheets/releaf/#{Rails.application.class.parent_name.downcase}.#{ext}")
        = stylesheet_link_tag "releaf/#{Rails.application.class.parent_name.downcase}", media: 'all'

    = csrf_meta_tags
  %body{class: body_classes}
    - if self.send(:"#{Releaf::ReleafDeviseHelper.devise_admin_model_name}_signed_in?")
      %header= Releaf.page_header_builder.new(self).output
      %aside
        .compacter
          %button{type: "button"}
            %i.toggle-angle-icon.fa{class: "fa-angle-double-" + ( current_admin_user.settings['releaf.side.compact'] ? "right" : "left" )}
        %nav
          %ul.block
            - admin_menu.each do |menu_item|
              %li{class: [("active" if menu_item[:active]), ("collapsed" if menu_item[:collapsed]) ], "data-name" => menu_item[:name]}
                - if menu_item[:items]
                  %span.trigger
                    %i.fa{class: "fa-" + menu_item[:icon]}
                    %span.name= t(menu_item[:name], scope: "admin.menu_items")
                    %span.collapser
                      %button{type: "button"}
                        %i.fa{class: menu_item[:collapsed] ? "fa-chevron-down" : "fa-chevron-up"}
                  %ul.block
                    - menu_item[:items].each do |section_item|
                      %li
                        %a.trigger{href: section_item[:url], class: section_item[:active] ? "active-item" : nil}
                          %span.name= t(section_item[:name], scope: "admin.menu_items")
                          %i.fa.fa-caret-left
                - else
                  %a.trigger{href: menu_item[:url]}
                    %i.fa{class: "fa-" + menu_item[:icon]}
                    %span.name= t(menu_item[:name], scope: "admin.menu_items")
      %main{id: "main"}= yield
      .notifications{:'data-close-text' => t(:close, scope: "admin.global")}
    - else
      = yield

    = javascript_include_tag "releaf/application"
    - if Rails.env.test?
      :javascript
        jQuery.fx.off = true;

    - if Releaf::AssetsResolver.javascript_exists? controller_asset
      = javascript_include_tag "releaf/controllers/#{controller_asset}"
    - %w[js js.erb].each do |ext|
      - if File.exists?(Rails.root.to_s + "/app/assets/javascripts/controllers/#{controller_asset}.#{ext}")
        = javascript_include_tag "controllers/#{controller_asset}"
      - if File.exists?(Rails.root.to_s + "/app/assets/javascripts/releaf/#{Rails.application.class.parent_name.downcase}.#{ext}")
        = javascript_include_tag "releaf/#{Rails.application.class.parent_name.downcase}"
